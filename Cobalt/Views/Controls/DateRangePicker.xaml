<ComboBox x:Class="Cobalt.Views.Controls.DateRangePicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Cobalt.Views.Controls" BorderThickness="0"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:util="clr-namespace:Cobalt.Views.Util"
             mc:Ignorable="d" SelectedIndex="4" md:TextFieldAssist.DecorationVisibility="Hidden"
             Style="{DynamicResource MaterialDesignComboBox}"
             d:DesignHeight="300" d:DesignWidth="300">
      <ComboBox.ItemTemplateSelector>
        <util:ContentDataTemplateSelector/>
    </ComboBox.ItemTemplateSelector>
             <ComboBoxItem>Yesterday</ComboBoxItem>
             <ComboBoxItem>This Week</ComboBoxItem>
             <ComboBoxItem>Last 7 Days</ComboBoxItem>
             <ComboBoxItem>This Month</ComboBoxItem>
             <ComboBoxItem x:Name="Custom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <Grid Height="24" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <DatePicker Grid.Column="0"/>
                    <md:TimePicker Grid.Column="1"/>
                    <TextBlock Text=" to " Grid.Column="2"/>
                    <DatePicker Grid.Column="3"/>
                    <md:TimePicker Grid.Column="4"/>
                </Grid>
             </ComboBoxItem>
             <ComboBox.Template>

        <ControlTemplate TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot"
              Background="{TemplateBinding Background}"
              SnapsToDevicePixels="True">
                <Grid x:Name="InnerRoot">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    </Grid.ColumnDefinitions>
                    <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource MaterialDesignComboBoxToggleButton}"/>
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Margin="{TemplateBinding Padding}"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid x:Name="InputRoot"
                          HorizontalAlignment="Left">
                            <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                 HorizontalAlignment="Left"
                                 HorizontalContentAlignment="Stretch"
                                 Style="{StaticResource MaterialDesignComboBoxEditableTextBox}"
                                 CaretBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"                                 
                                 Visibility="Collapsed" />

                            <md:SmartHint x:Name="Hint"
                                       HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:HintProxyFabricConverter.Instance}}"
                                       FontSize="{TemplateBinding FontSize}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                       UseFloating="{Binding Path=(md:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                       HintOpacity="{Binding Path=(md:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                       Hint="{TemplateBinding md:HintAssist.Hint}" />
                        </Grid>
                    </Grid>
                    <md:Underline x:Name="Underline"
                               Grid.ColumnSpan="2"
                               IsActive="{Binding ElementName=PART_EditableTextBox, Path=IsKeyboardFocused}"
                               Visibility="{Binding Path=(md:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>

                    <md:ComboBoxPopup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   Focusable="False"
                                   HorizontalOffset="-11.5"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   PlacementTarget="{Binding ElementName=templateRoot}"
                                   SnapsToDevicePixels="True"
                                   UseLayoutRounding="True"
                                   Placement="Custom"
                                   PopupAnimation="Fade"
                                   VerticalOffset="0"
                                   DefaultVerticalOffset="5"
                                   DownVerticalOffset="-15.5"
                                   UpVerticalOffset="15"
                                   ClassicMode="{Binding Path=(md:ComboBoxAssist.ClassicMode), RelativeSource={RelativeSource TemplatedParent}}"
                                   UpContentTemplate="{StaticResource PopupContentUpTemplate}"
                                   DownContentTemplate="{StaticResource PopupContentDownTemplate}"
                                   ClassicContentTemplate="{StaticResource PopupContentClassicTemplate}">
                        <ContentControl>
                            <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      Background="{Binding Background, ElementName=PART_Popup}">
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </ContentControl>
                    </md:ComboBoxPopup>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="PopupPlacement" Value="{x:Static md:ComboBoxPopupPlacement.Classic}">
                    <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignComboBoxItemStyle}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="templateRoot" Property="Opacity" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsEditable" Value="True">
                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Underline" Property="Visibility" Value="{Binding Path=(md:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}" />
                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="md:HintAssist.IsFloating" Value="True">
                    <Setter TargetName="InnerRoot" Property="Margin" Value="0 11.5 0 0" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEditable" Value="False"/>
                        <Condition Property="IsDropDownOpen" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Underline" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="toggleButton" Property="BorderBrush" Value="Transparent"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                        <Condition Property="IsKeyboardFocused" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                    <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                        <Condition SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                    <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                        <Condition Property="IsDropDownOpen" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                    <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true" />
                        <Condition Property="Validation.HasError" Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true" />
                        <Condition Property="Validation.HasError" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </ComboBox.Template>
</ComboBox>
